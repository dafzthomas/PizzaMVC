@model IEnumerable<PizzaWebSite.Models.PizzaCart.OrderItem>

@{
    ViewBag.Title = "Confirm Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.OrderTotal = 0; 
}

<div class="jumbotron">
    <h1>Pizza Website</h1>
    <p class="lead">Confirm Order!</p>
</div>

<div class="row">
    <div class="col-md-10">
        <h2>Confirm order</h2>


        @foreach (var orderItem in Model)
        {
            ViewBag.OrderTotal += orderItem.Price;

            <h3>Pizza: @orderItem.Pizza.Name</h3>
            <p>Size: @orderItem.Pizza.Size</p>
            <p>Base Pizza Price: £@orderItem.Pizza.Price</p>

            <p>Toppings</p>
            <ul>
                @foreach (var topping in orderItem.Pizza.Toppings.ToList())
                {
                    <li>@topping.Name</li>
                }
            </ul>

            <p>Extra Selected Toppings</p>
            <ul>
                @if (orderItem.ExtraToppings.Count > 0)
                {
                    foreach (var topping in orderItem.ExtraToppings)
                    {
                        <li>@topping.Name (£@topping.Price)</li>
                    }
                }
                else
                {
                    <li>None</li>
                }
            </ul>

            <h4>Price: £@orderItem.Price</h4>
        }

        @if (ViewBag.Order.Discount > 0)
        {
            <p>Voucher applied.</p>
            <h3>Order total: <span style="text-decoration: line-through">£@ViewBag.OrderTotal</span> - £@(ViewBag.OrderTotal - ViewBag.Order.Discount)</h3>
        }
        else
        {
            <h3>£@ViewBag.OrderTotal</h3>
        }

        @if (ViewBag.Order.Delivery)
        {
            <p>Order for delivery</p>

            <p>Address: @ViewBag.User.Address</p>
            <p>Postcode: @ViewBag.User.PostCode</p>
            <p>Phone number: @ViewBag.User.PhoneNumber</p>

        }
        else
        {
            <p>Order for collection</p>
        }

        @using (Html.BeginForm("CheckDeal", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <label>Voucher:</label>
            <input type="text" name="voucher" />
            <input type="submit" value="Submit" class="btn btn-default" />
        }

        @using (Html.BeginForm("SubmitOrder", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <input type="submit" value="Submit" class="btn btn-default" />
        }
    </div>
</div>